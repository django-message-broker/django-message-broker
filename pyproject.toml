[tool.poetry]
name = "django-message-broker"
version = "0.2.0"
description = "All-in-one message broker for Django supporting Channels, Celery and process workers"
authors = ["Tanzo Creative Ltd"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/django-message-broker/django-message-broker"
repository = "https://github.com/django-message-broker/django-message-broker"
documentation = ""
keywords = [
    "django",
    "message-broker",
    "channels",
    "celery"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Framework :: Django :: 4.0",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.8"
Django = "^4.0"
msgspec = "^0.3.2"
pyzmq = "^22.3.0"
tornado = "^6.1"

[tool.poetry.dev-dependencies]
black = "^21.12b0"
flake8 = "^4.0.1"
isort = "^5.10.1"
Sphinx = "^4.3.2"
sphinx_rtd_theme = "^1.0.0"
myst-parser = "^0.16.1"
pytest = "^6.2.5"
channels = "^3.0.4"
async-timeout = "^4.0.2"
pytest-django = "^4.5.2"
pytest-asyncio = "^0.16.0"
interrogate = "^1.5.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
docs = ["sphinx"]

[tool.black]
line-length = 88

[tool.isort]
profile = "hug"
src_paths = ["isort", "test"]

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 2
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
generate-badge = "./docs/assets"
badge-format = "svg"
